org: raulcorreia7
app: tmpro-challenge
service: raul-project
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  environment:
    MESSAGE_TOPIC_NAME: ${self:custom.topicName}
    MESSAGE_TOPIC_ARN: ${self:custom.topicArn}
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    EMAIL_ARN : arn:aws:ses:eu-central-1:061659491951:identity/testing@raulcorreia.com
    FROM_NAME : "Ra√∫l Correia"
    FROM_EMAIL : "testing@raulcorreia.com"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
      Resource: 
          - ${self:custom.topicArn}
          - 'Fn::GetAtt': [ MessageDynamoDbTable, Arn ]

custom:
  topicName: message-topic-channel
  # cloud formation intrinstic function to get ARN of topic.
  # `MessageTopic` references the cloudformation in `resources`
  topicArn:
    Fn::Join:
      - ""
      - - "arn:aws:sns:"
        - Ref: AWS::Region
        - ":"
        - Ref: AWS::AccountId
        - ":"
        - Fn::GetAtt:
            - MessageTopic
            - TopicName

functions:
  post-message:
    handler: src/post-message.handler
    memorySize: 128
    events:
      - httpApi:
          method: POST
          path: /message

  get-message:
    handler: src/get-message.handler
    memorySize: 128
    events:
      - httpApi:
          method: GET
          path: /message/{target}

  save-message:
    handler: src/save-message.handler
    memorySize: 128
    events:
      - sns:
          arn: !Ref MessageTopic
          topicName: ${self:custom.topicName}

resources:
  Resources:
    # This creates a new sns topic.
    MessageTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: "Second stand alone topic created via CloudFormation"
        TopicName: ${self:custom.topicName}
    
    # This creates a new DynamoDB table
    MessageDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: target
            AttributeType: S
        KeySchema:
          - AttributeName: target
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
